
import random
import pygame
from pygame.locals import *
import sys
import os
import math

# define display surface
W, H = 800, 600
HW, HH = W / 2, H / 2
AREA = W * H

os.environ['SDL_VIDEO_WINDOW_POS'] = "50,50"

# setup pygame
pygame.init()
CLOCK = pygame.time.Clock()
DS = pygame.display.set_mode((W, H))
pygame.display.set_caption("t-rex")
FPS = 120

bkgd = pygame.image.load("ground.png").convert()
x = 0

#player
playerimg = pygame.image.load('dino.png')
playerx = 0
playery = 270

def player(x,y):
    DS.blit(playerimg, (x,y))

#cactus

class cactus_1(object):

    def __init__(self,x,y,width,height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height

    def draw(self,DS):
        self.img = pygame.image.load("big_cactus2.png")
        self.hitbox = (self.x + 2, self.y + 2, self.width - 20, self.height - 5)
        pygame.draw.rect(DS, (255,0,0), self.hitbox, 2)
        DS.blit(self.img, (self.x,self.y))
class cactus_2():

    def __init__(self,x,y,width,height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height

    def draw(self,DS):
        self.img = pygame.image.load("big_cactus3.png")
        self.hitbox = (self.x + 2, self.y + 2, self.width - 20, self.height - 5)
        pygame.draw.rect(DS, (255,0,0), self.hitbox, 2)
        DS.blit(self.img, (self.x,self.y))

class cactus_3():

    def __init__(self,x,y,width,height):
        self.x = x
        self.y = y
        self.width = width
        self.height = height

    def draw(self,DS):
        self.img = pygame.image.load("big_cactus1.png")
        self.hitbox = (self.x + 2, self.y + 2, self.width - 20, self.height - 5)
        pygame.draw.rect(DS, (255,0,0), self.hitbox, 2)
        DS.blit(self.img, (self.x,self.y))


def redrawWindow():
	for object in objects:
		object.draw(DS)

obstacles = []
#timer which creates first
pygame.time.set_timer(USEREVENT+2, random.randint(1000, 3500))
while True:
   #events
    DS.fill((255,255,255))
    for event in pygame.event.get():
        if event.type == USEREVENT+2:
            r = random.randrange(0,3)
            if r == 0:
                obstacles.append(cactus_1(800, 270, 70, 64))
            elif r == 1:
                obstacles.append(cactus_2(800, 270, 70, 64))
            elif r == 2:
                obstacles.append(cactus_3(800, 270, 70, 64))
        pygame.time.set_timer(USEREVENT+2, random.randint(1000, 3500))
        if event.type == QUIT or (event.type == KEYDOWN and event.key == K_ESCAPE):
            pygame.quit()
            sys.exit()
    #scrolling background
    rel_x = x % bkgd.get_rect().width
    DS.blit(bkgd, (rel_x - bkgd.get_rect().width, 300))
    if rel_x < W:
         DS.blit(bkgd, (rel_x, 300))
    x -= 1.5


    # Loops through all obstacles
    for obstacle in obstacles:
        obstacle.draw(DS)
    for obstacle in obstacles:
        obstacle.x -= 1.5
        if obstacle.x < obstacle.width * -1:
            obstacles.pop(obstacles.index(obstacle))
	#drawing player
    player(playerx, playery)

    pygame.display.update()
    CLOCK.tick(FPS)
